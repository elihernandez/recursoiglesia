// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Artist {
  id          String       @id @default(uuid())
  url         String
  name        String
  imgUrl      String
  multitracks Multitrack[]
  albums      Album[]
}

model Album {
  id          String       @id @default(uuid())
  url         String
  name        String
  imgUrl      String
  artistId    String?
  artist      Artist?      @relation(fields: [artistId], references: [id])
  multitracks Multitrack[]
  releaseDate DateTime     @db.Date
}

model Multitrack {
  id                 String              @id @default(uuid())
  songId             String              @unique
  name               String
  shortener          Shortener?          @relation(fields: [songId], references: [id])
  album              Album?              @relation(fields: [albumId], references: [id])
  albumId            String?
  artist             Artist?             @relation(fields: [artistId], references: [id])
  artistId           String?
  multitrackRequests MultitrackRequest[]
}

model Shortener {
  id         String      @id
  name       String
  link       String
  multitrack Multitrack?
  createdAt  DateTime    @default(now())
}

model Template {
  id     String  @id @default(uuid())
  name   String
  imgUrl String
  url    String?
  link   String?
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique()
  password  String
  name      String
  createdAt DateTime @default(now())
}

model Subscriber {
  id        String   @id @default(uuid())
  email     String   @unique()
  createdAt DateTime @default(now())
}

model Software {
  id     String  @id @default(uuid())
  name   String
  imgUrl String
  url    String?
  link   String?
}

model MultitrackRequest {
  id        String   @id @default(uuid())
  email     String
  songId    String
  name      String
  isSent    Boolean  @default(false)
  createdAt DateTime @default(now())

  multitrack Multitrack @relation(fields: [songId], references: [songId])
}

model ResourceDownload {
  id         String   @id @default(uuid())
  resourceId String
  name       String
  createdAt  DateTime @default(now())
}
